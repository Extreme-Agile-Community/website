"use strict";(self.webpackChunkextremeagile=self.webpackChunkextremeagile||[]).push([[602],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),u=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,y=p["".concat(l,".").concat(m)]||p[m]||d[m]||a;return n?o.createElement(y,i(i({ref:t},c),{},{components:n})):o.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var u=2;u<a;u++)i[u]=n[u];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6494:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:1},i="Continuous Delivery",s={unversionedId:"devops/continuous-delivery/continuous-delivery",id:"devops/continuous-delivery/continuous-delivery",title:"Continuous Delivery",description:"Continuous Delivery is a key DevOps practice that ensures software is always in a state that can be deployed to production, enabling faster and more reliable software releases. It relies on version control, test automation, deployment automation, and close collaboration between teams.",source:"@site/docs/devops/continuous-delivery/continuous-delivery.md",sourceDirName:"devops/continuous-delivery",slug:"/devops/continuous-delivery/",permalink:"/docs/devops/continuous-delivery/",draft:!1,editUrl:"https://github.com/extreme-agile-community/website/tree/main/packages/create-docusaurus/templates/shared/docs/devops/continuous-delivery/continuous-delivery.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Continuous Integration",permalink:"/docs/devops/continuous-integration/"},next:{title:"Continuous Deployment",permalink:"/docs/devops/continuous-deployment/"}},l={},u=[{value:"Definition",id:"definition",level:2},{value:"Goals",id:"goals",level:2},{value:"Practices",id:"practices",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"continuous-delivery"},"Continuous Delivery"),(0,r.kt)("admonition",{title:"TL;DR;",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Continuous Delivery is a key DevOps practice that ensures software is always in a state that can be deployed to production, enabling faster and more reliable software releases. It relies on version control, test automation, deployment automation, and close collaboration between teams.")),(0,r.kt)("h2",{id:"definition"},"Definition"),(0,r.kt)("p",null,"Continuous Delivery (CD) is a software development practice where code changes are automatically built, tested, and prepared for a release to production. It expands upon Continuous Integration by deploying all code changes to a testing environment and/or a production environment after the build stage."),(0,r.kt)("h2",{id:"goals"},"Goals"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ensure software is always in a releasable state throughout its lifecycle."),(0,r.kt)("li",{parentName:"ul"},"Enable faster, more reliable software releases."),(0,r.kt)("li",{parentName:"ul"},"Improve developer productivity by reducing the complexities of deployment."),(0,r.kt)("li",{parentName:"ul"},"Enable faster feedback loop by pushing changes to users quickly and learning from user feedback.")),(0,r.kt)("h2",{id:"practices"},"Practices"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Use of a version control system where all changes are committed."),(0,r.kt)("li",{parentName:"ul"},"Automated testing to validate the correctness of the code."),(0,r.kt)("li",{parentName:"ul"},"Automated deployment process to push changes to different environments."),(0,r.kt)("li",{parentName:"ul"},"Infrastructure management as code to ensure consistency across environments."),(0,r.kt)("li",{parentName:"ul"},"Close collaboration between development, operations, and other stakeholders."),(0,r.kt)("li",{parentName:"ul"},"Monitoring and logging to quickly identify and resolve issues in production.")))}d.isMDXComponent=!0}}]);