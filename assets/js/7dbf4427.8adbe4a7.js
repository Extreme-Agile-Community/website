"use strict";(self.webpackChunkextremeagile=self.webpackChunkextremeagile||[]).push([[386],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>b});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(r),d=o,b=m["".concat(l,".").concat(d)]||m[d]||u[d]||a;return r?n.createElement(b,i(i({ref:t},c),{},{components:r})):n.createElement(b,i({ref:t},c))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},2289:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={sidebar_position:1},i="Observability",s={unversionedId:"devops/observability/observability",id:"devops/observability/observability",title:"Observability",description:"Observability is a key aspect of system and application monitoring that provides insights into the health, performance, and behavior of a system. It relies on data from logs, metrics, and traces to provide a comprehensive understanding of the system's state.",source:"@site/docs/devops/observability/observability.md",sourceDirName:"devops/observability",slug:"/devops/observability/",permalink:"/docs/devops/observability/",draft:!1,editUrl:"https://github.com/extreme-agile-community/website/tree/main/packages/create-docusaurus/templates/shared/docs/devops/observability/observability.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Continuous Deployment",permalink:"/docs/devops/continuous-deployment/"},next:{title:"Automated testing",permalink:"/docs/devops/automated-testing/"}},l={},p=[{value:"Goals",id:"goals",level:2},{value:"Components",id:"components",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...r}=e;return(0,o.kt)(m,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"observability"},"Observability"),(0,o.kt)("admonition",{title:"TL;DR;",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"Observability is a key aspect of system and application monitoring that provides insights into the health, performance, and behavior of a system. It relies on data from logs, metrics, and traces to provide a comprehensive understanding of the system's state.")),(0,o.kt)("h1",{id:"definition"},"Definition"),(0,o.kt)("p",null,"Observability is a measure of how well internal states of a system can be inferred from knowledge of its external outputs. In the context of software engineering, observability typically refers to the ability to understand the state of a system or application by examining its outputs, logs, metrics, and traces."),(0,o.kt)("h2",{id:"goals"},"Goals"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Understand the behavior of the system and diagnose issues."),(0,o.kt)("li",{parentName:"ul"},"Monitor system health and performance."),(0,o.kt)("li",{parentName:"ul"},"Gain insights into user behavior and system usage."),(0,o.kt)("li",{parentName:"ul"},"Improve system reliability and performance."),(0,o.kt)("li",{parentName:"ul"},"The main components of Observability include:")),(0,o.kt)("h2",{id:"components"},"Components"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Logs"),": Detailed records of events happening in the system."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Metrics"),": Numerical data measured over intervals of time, such as response time, error rate, or resource usage."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Traces"),": Information about how a request moves through a system, useful for understanding the flow of transactions or requests.")))}u.isMDXComponent=!0}}]);